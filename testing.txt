Directives = HTML annotations that trigger js
Modules = js application components
Controllers = inside the module-- where we add application behavior
Expressions = how values are displayed in the page

Filters provide formatting in directives.
Examples:
{{ '1388123412323' | date:'MM/dd/yy @ h:mma' }}
==> 12/27/2013 @ 12:50AM

{{'babelfish' | uppercase }} 
==> BABELFISH

{{'My Description' | limitTo:8}} 
==> My Descr

<li ng-repeat= "product in store.products | limitTo:3" > 
==> 3 products

<li ng-repeat= "product in store.products | orderBy: '-price'" > 
==> products listed by descending price


Images -- use ng-src. Otherwise the browser will try to load the img before the expression evaluates


Click event directive:
example: tabbed browsing with ng-show
<section ng-init="tab= 1">
  <ul class="nav nav-pills">
    <li ng-class="{ active:tab == 1 }">
      <a href ng-click="tab = 1">Description</a> 
    </li>
    <li ng-class="{ active:tab == 2 }">
      <a href ng-click="tab = 2">Reviews</a> 
    </li>
    <li ng-class="{ active:tab == 3 }">
      <a href ng-click="tab = 3">Tab3</a> 
    </li>
  </ul>

  <div class="panel" ng-show="tab === 1"></div>
  <div class="panel" ng-show="tab === 2"></div>
  <div class="panel" ng-show="tab === 3"></div>

</section>

problem: too much logic in HTML
soln: move logic to new controller.

<section ng-controller="PanelController as panel">
  <ul class="nav nav-pills">
    <li ng-class="{ active: panel.isSelected(1) }">
      <a href ng-click="panel.selectTab(1)">Description</a> 
    </li>
    <li ng-class="{ active: panel.isSelected(2) }">
      <a href ng-click="panel.selectTab(2)">Reviews</a> 
    </li>
    <li ng-class="{ active: panel.isSelected(3) }">
      <a href ng-click="panel.selectTab(3)">Tab3</a> 
    </li>
  </ul>

  <div class="panel" ng-show="panel.isSelected(1)"></div>
  <div class="panel" ng-show="panel.isSelected(2)"></div>
  <div class="panel" ng-show="panel.isSelected(3)"></div>

</section>